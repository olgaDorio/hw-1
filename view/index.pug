<!DOCTYPE html>
html(lang="en")
head
  meta(name="robots", content="noindex")
  meta(name="viewport", content="width=device-width,maximum-scale=1,initial-scale=1")
  meta(charset="UTF-8")
  title Document
  link(rel="stylesheet", href="/css/style.css")
body
  .page
    header.page__header
      img.icon.logo(src="/assets/logo.png")
      a.link.link--active(href="#") События
      a.link(href="#") Сводка
      a.link(href="#") Устройства
      a.link(href="#") Сценарии
    main.page__main
      h1.title Лента событий

      each event in JSON.parse(events)
        .card(class="card--" + event.size + " card--" + event.type + (!event.description && !event.data ? ' card--small' : ' card'))
          button.button.card__control
          button.button.card__control
          .card__header
            .card__title
              img.icon(src="/assets/" + event.icon + '.svg')
              span= event.title
            .card__subtitle
              div= event.source
              div= event.time
          if event.description || event.data
            .card__body
              .card__description= event.description

              - var { buttons, type, image, albumcover, artist, track, volume } = event.data || {}
              - var { temperature, humidity } = event.data || {}
              - var allowedKeys = ['temperature', 'humidity']


              if buttons
                .button__group
                  .button.button--active #{buttons[0]}
                  .button #{buttons[1]}

              else if type === "graph"
                img.card__image(src="/assets/chart.png")

              else if image
                img.card__image(src="/assets/bitmap.png")

              else if event.data && Object.keys(event.data).every(k => allowedKeys.includes(k))
                .indicator__group
                  .indicator
                    | Температура:&nbsp;
                    .indicator__value #{temperature} C

                  .indicator
                    | Влажность:&nbsp;
                    .indicator__value #{humidity}%
              else if albumcover
                .player
                  .player__row
                    img.player__albumcover(src=albumcover)
                    .player__column
                      .player__artist #{artist}
                      input.range(type="range")
                    .player__duration #{track.length}
                  .player__row
                    button.button.player__control
                      img(src="/assets/prev.svg")
                    button.button.player__control
                      img(src="/assets/prev.svg", style="transform: rotate(-180deg)")
                    .player__column
                      input.range.range--round(type="range")
                    .player__volume #{volume}%

    footer.page__footer
      .link.link--small Помощь
      .link.link--small Обратная связь
      .link.link--small Разработчикам
      .link.link--small Условия использования
      span.separate copyright

